

package account;
import java.sql.*;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Billing extends javax.swing.JFrame {


    /** Creates new form Manual */
    public Billing() {
        initComponents();
        cmbDate.setSelectedIndex(currentDate);
        cmbMonth.setSelectedIndex(currentMonth);
        cmbYear.setSelectedItem(Year);
        setProductDetails();
    }
    
    public void disconnect(){
        try {
            stmtAcc.close();
        } catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        billTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        totalText = new javax.swing.JTextField();
        totalButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        vF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dF = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        nxtBillButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        cmbYear = new javax.swing.JComboBox();
        cmbMonth = new javax.swing.JComboBox();
        cmbDate = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        qF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pF = new javax.swing.JComboBox();
        viewButton = new javax.swing.JButton();
        btnRM = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Billing");
        setBounds(new java.awt.Rectangle(250, 80, 0, 0));
        setResizable(false);

        billTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial", "Product Name", "Quantity", "Value", "Tax Rate", "Discount Rate", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        billTable.setColumnSelectionAllowed(true);
        billTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(billTable);
        billTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setText("Customer Name");

        totalButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        totalButton.setText("Total");
        totalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Product Name");

        jLabel3.setText("Value");

        jLabel4.setText("Tax Rate");

        jLabel5.setText("Discount Rate");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        nxtBillButton.setText("Next Bill");
        nxtBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nxtBillButtonActionPerformed(evt);
            }
        });

        cmbYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "yyyy", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "mm", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cmbDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "dd", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel6.setText("Date");

        jLabel7.setText("Quantity");

        pF.setEditable(true);
        pF.setMaximumRowCount(250);
        pF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        pF.setAutoscrolls(true);
        pF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pFActionPerformed(evt);
            }
        });

        viewButton.setText("View Details");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        btnRM.setText("Remove selected row");
        btnRM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRMActionPerformed(evt);
            }
        });

        jButton1.setText("Enter new product");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(totalButton)
                                .addGap(45, 45, 45)
                                .addComponent(totalText, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(saveButton)
                                .addGap(27, 27, 27)
                                .addComponent(jButton1)
                                .addGap(34, 34, 34)
                                .addComponent(viewButton)
                                .addGap(18, 18, 18)
                                .addComponent(nxtBillButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 321, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(vF, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(101, 101, 101))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pF, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(182, 182, 182)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(29, 29, 29))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dF, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57)
                                        .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(qF, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21))
                    .addComponent(btnRM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRM)
                        .addGap(8, 8, 8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(pF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(qF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nxtBillButton)
                            .addComponent(totalButton)
                            .addComponent(viewButton)
                            .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveButton)
                            .addComponent(jButton1)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(dF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addButton)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(548, 548, 548)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(44, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int monthCheck(JComboBox a,JComboBox b,JComboBox c){
        int f=0;
        switch(b.getSelectedIndex()){
            case 2:
                int yer=Integer.parseInt(c.getSelectedItem().toString());
                if((yer%4==0&&yer%100!=0)||yer%400==0){
                    if(a.getSelectedIndex()>29){JOptionPane.showMessageDialog(this, "Invalid date!!");a.setFocusable(true);f=1;}
                }
                else if(a.getSelectedIndex()>28){JOptionPane.showMessageDialog(this, "Invalid date!!");a.setFocusable(true);f=1;}
                break;
            case 4:case 6:case 9:case 11:
                if(a.getSelectedIndex()>30){JOptionPane.showMessageDialog(this, "Invalid date!!");a.setFocusable(true);f=1;}
        }
        return f;
    }
    private void setProductDetails(){
        try {
            String strUrl = "jdbc:derby:Account;user=app;password=app";
            Connection dbConnection = DriverManager.getConnection(strUrl);
            Statement stmt = dbConnection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            stmt.executeUpdate("delete from APP.PT where QUANTITY <='"+0+"'");
            ResultSet rs=stmt.executeQuery("select PRODNAME, QUANTITY from APP.PT");
            int i=0;
            rs.beforeFirst();
            while(rs.next()){
                pF.addItem(rs.getString(1).toString());
                i++;
            }
            stmt.close();   
        } catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
            /*disconnect();
        this.setVisible(false);
        Home h = new Home();
        h.setVisible(true);*/
    }//GEN-LAST:event_jButton4ActionPerformed
    
    
    private void btnDelNot2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelNot2ActionPerformed
        // TODO add your handling code here:
        //delete(n2, "note");
    }//GEN-LAST:event_btnDelNot2ActionPerformed

    private void btnDelNot3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelNot3ActionPerformed
        // TODO add your handling code here:
        //delete(n3, "note");
    }//GEN-LAST:event_btnDelNot3ActionPerformed

    private void totalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalButtonActionPerformed
        // TODO add your handling code here:
        try{
            int rowCount = billTable.getRowCount(), i;float total=0,taxRate,discRate;
            for(i = 0 ; i < rowCount ; i++){
            total=total+Float.parseFloat(billTable.getValueAt(i, 6).toString());
            }
            totalText.setText(Float.toString(total));
        }
            catch (java.lang.NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Incomplete data!");
        }
}//GEN-LAST:event_totalButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        try{
        if(pF.getSelectedIndex()!=0){
        DefaultTableModel model = (DefaultTableModel) billTable.getModel();
        float value=Float.parseFloat(vF.getText()),taxRate,discRate;
            if(tF.getText().isEmpty())taxRate=0;
            else taxRate=Float.parseFloat(tF.getText());
            if(dF.getText().isEmpty())discRate=0;
            else discRate=Float.parseFloat(dF.getText());
        float amount=(Float.parseFloat(vF.getText()))*(value+(value*(taxRate/100))-(value*(discRate/100)));
        model.addRow(new Object[]{Integer.toString(billTable.getRowCount()+1), pF.getSelectedItem().toString(), qF.getText(), vF.getText(), tF.getText(), dF.getText(), Float.toString(amount)});
       qF.setText("");vF.setText("");tF.setText("");dF.setText("");
        }
        else JOptionPane.showMessageDialog(this, "Please select any product from list!");
        }
        catch (java.lang.NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Incomplete data!");
        }
}//GEN-LAST:event_addButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            int f=monthCheck(cmbDate, cmbMonth, cmbYear);
            String strUrl = "jdbc:derby:Account;user=app;password=app";
            Connection dbConnection = DriverManager.getConnection(strUrl);
            Statement stmt = dbConnection.createStatement();
            int rc = billTable.getRowCount();
            if(f==0&&rc!=0){
                String custid=getId();
                for (int i = 0; i < rc; i++) {
                    stmt.executeUpdate("insert into APP.ACC values('" + custid + "','" + nameField.getText() + "','"+billTable.getValueAt(i, 0).toString()+"','"+billTable.getValueAt(i, 1).toString()+"','"+billTable.getValueAt(i, 2).toString()+"','"+billTable.getValueAt(i, 3).toString()+"','"+billTable.getValueAt(i, 4).toString()+"','"+billTable.getValueAt(i, 5).toString()+"','"+billTable.getValueAt(i, 6).toString()+"', '"+Date+"', '"+Month+"', '"+Year+"')");
            }
            JOptionPane.showMessageDialog(this, "Bill successfully saved!\nCustomer ID is "+custid);
            }
            else 
                JOptionPane.showMessageDialog(this, "There is nothing to save!");

            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        } catch (java.lang.NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Incomplete data!");
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void nxtBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nxtBillButtonActionPerformed
        // TODO add your handling code here:
        nameField.setText("");
        DefaultTableModel model = (DefaultTableModel) billTable.getModel();
        model.setRowCount(0);
        totalText.setText("");
    }//GEN-LAST:event_nxtBillButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        ViewDetails vi=new ViewDetails();
        this.setVisible(false);
        vi.setVisible(true);
    }//GEN-LAST:event_viewButtonActionPerformed

    private void btnRMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRMActionPerformed
        try{
        DefaultTableModel model = (DefaultTableModel) billTable.getModel();
        model.removeRow(billTable.getSelectedRow());
        for(int i=0;i<model.getRowCount();i++){
            model.setValueAt(i+1, i, 0);
        }
        }
        catch (java.lang.ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "No row selected!");
        }
    }//GEN-LAST:event_btnRMActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DataEntry de=new DataEntry();
        this.setVisible(false);
        de.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pFActionPerformed
        try {
            String strUrl = "jdbc:derby:Account;user=app;password=app";
            Connection dbConnection = DriverManager.getConnection(strUrl);
            Statement stmt = dbConnection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select VALUE from APP.PT where PRODNAME='"+pF.getSelectedItem().toString()+"'");
            if(rs.next()){
                vF.setText(rs.getString(1));
            }
    }//GEN-LAST:event_pFActionPerformed
        catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Billing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTable billTable;
    private javax.swing.JButton btnRM;
    private javax.swing.JComboBox cmbDate;
    private javax.swing.JComboBox cmbMonth;
    private javax.swing.JComboBox cmbYear;
    private javax.swing.JTextField dF;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton nxtBillButton;
    private javax.swing.JComboBox pF;
    private javax.swing.JTextField qF;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField tF;
    private javax.swing.JButton totalButton;
    private javax.swing.JTextField totalText;
    private javax.swing.JTextField vF;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
        Statement stmtAcc;DateFormat yearf=new SimpleDateFormat("yyyy");
        DateFormat monthf=new SimpleDateFormat("MM");
        DateFormat datef=new SimpleDateFormat("dd");
        Date datess=new Date();
        String Year=yearf.format(datess);
        String Month=monthf.format(datess);
        String Date=datef.format(datess);
        int currentDate=Integer.parseInt(Date);
        int currentMonth=Integer.parseInt(Month);
        int currentYear=Integer.parseInt(Year);
        String arr[][] = new String[250][250];

        
    String getId(){
        String id,code="c";
        try {

            String strUrl = "jdbc:derby:Account;user=app;password=app";
            Connection dbConnection = DriverManager.getConnection(strUrl);
            Statement stmt = dbConnection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select CUSTID from APP.ACC");
            int[] arrayId=new int[1000];
            rs.beforeFirst();
            if(rs.next()){
                id="";
            rs.beforeFirst();
            int i=0;
            while(rs.next())
            {
                /*jLabel1.setText(rs.getString(1));*/
                arrayId[i]=Integer.parseInt(rs.getString(1).substring(1));
                i++;
            }
            int largest=arrayId[0];
            for(int j=1;j<arrayId.length;j++)
            {
                if(arrayId[j]>largest)largest=arrayId[j];
            }
            largest++;
            code=code.concat(String.valueOf(largest));
            }
            else
            {
                code="c".concat("1");
            }
            stmt.close();
            return code;
        } catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        }return code;
    }
}
